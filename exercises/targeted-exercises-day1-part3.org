#+TITLE: PhD course Targeted Register Analysis. Exercises: Day 1 part 3

* Objectives

The learning targets of this exercise to write a function which is
used to create a target in the pipeline.

** Reading references 

-  [[goodies/R-functions.org]]
-  [[goodies/lazy-coder.org]]

----------------------------------------------------------------------

* Working with an existing targets project

- Switch to the RStudio project called /example_project/ that you have created and worked through in previous Exercises.
- Open the R-quarto file called "example_report.qmd"
- Export the file to html by clicking =Render=. 
- Use =tar_load= to load the object =table_1=. You can also use =tar_load_everything()= which however may require a call to =tar_prune()= first.
- Open the file =example_project/_targets.R=. The pipeline is the list at the end of the file. Add the following new target to the pipeline (add a comma if needed): 
 
#+BEGIN_SRC R  :results output raw  :exports code  :session *R* :cache yes  
tar_target(propensity_score_table,{
  formula <- treatment~sex+age
  ps <- glm(formula,data=data,family="binomial")
  publish(ps,print=FALSE)
})
#+END_SRC

Run =tar_make()= then load and print this new target:
=tar_load(propensity_score_table)= followed by =print(propensity_score_table)=
- It is often an advantage to use functions even for few lines of
  code. This keeps the pipeline clean and readable and also makes it
  easier for R to recognize which targets depend on which other
  targets. To train the transition to functions, extract and move the
  body (the body is the code between {}) of the just created target
  'propensity_score_table' to a new file
  =functions/get_propensity_score_table.R=. In this file define a new
  function called =get_propensity_score_table= with two arguments:
  =formula= and =data=. If you have trouble writing this function,
  then check the folder =example_project/secret_functions= for
  help.
- Adapt the file =_targets.R= as follows:
#+BEGIN_SRC R  :results output raw  :exports code  :session *R* :cache yes  
tar_target(demo_table,{
  get_propensity_score_table(formula,data)
},packages=c("data.table","Publish"))
#+END_SRC  
- Run =tar_make()= again ...
- Add the propensity score table to the file "example_report.qmd" and
  export again.
