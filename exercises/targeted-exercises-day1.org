#+TITLE: PhD course: Targeted Register Analysis
#+setupfile:~/emacs-genome/snps/org-templates/setup-basic-stats-homepage.org

* Objectives

The learning targets of this exercise:

- Check your R-setup.
- Create RStudio projects.
- Use the R-package =targets= to pipeline the work.

----------------------------------------------------------------------

** Exercise 1 

*** System 

The exercises for this course were developed and tested using R
version =4.2.1= and RStudio version =2022.07.2+576=. The versions of
the most important R-packages are:

#+BEGIN_SRC R  :results output   :exports  (exercise-with-code)  :session *R* :cache yes
course_packages  <- c("targets","data.table","ranger","glmnet","Publish","lava","riskRegression","matrixStats")
nix=lapply(course_packages,function(p){
  v=packageVersion(p)
  cat(paste(p,":",v,"\n"))
})
#+END_SRC

: targets : 0.13.5 
: data.table : 1.14.6 
: ranger : 0.14.1 
: glmnet : 4.1.4 
: Publish : 2022.4.3 
: lava : 1.6.10 
: riskRegression : 2022.11.28 
: matrixStats : 0.62.0

You may have different versions installed on your computer and whether
this is the case can be useful knowlegde. If at some point the
exercises do not work as expected it may be due to a different version
of the software.

**** Check your R version 

In the R console execute the following command

#+BEGIN_SRC R  :results output raw  :exports code  :session *R* :cache yes  
version
#+END_SRC  
  
**** Check your  R-studio version

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output raw  :exports code  :session *R* :cache yes  
Rstudio -> Help -> About Rstudio
#+END_SRC

**** Install packages/check package versions
#+BEGIN_SRC R  :results output raw  :exports code  :session *R* :cache yes
nix <- lapply(course_packages,function(p){
  if (!do.call(require,list(package=p,quietly=TRUE))){
    install.packages(package=p)
  }
  do.call(library,list(package=p,quietly=TRUE,warn.conflicts=FALSE))
  packageVersion(pkg=p)
})
#+END_SRC

*** Systemics 

**** Turn off .RData

The .RData files if they exist contain the R-objects that you had
loaded when you exited your previous R session. It is generally better
to keep the R-code that produces these objects. Also, the R-package
=targets= that we are going to work with provides a much more
sophisticated way to save objects. A third reason is that large
register data when unpurposely saved in .RData or loaded from .RData
slow down everything. Hence, to turn the .RData dialog off goto:

=Tools -> Global options=

and

1. uncheck the save .RData into workspace at startup
2. set the save workspace to .RData on exit to =Never= 

  [[./figures/rstudio-save-Rdata-never.png]]

**** Projects

For the exercises, we work with RStudio projects, see section 8.4 in
this document: https://r4ds.had.co.nz/workflow-projects.html. You
should now read about projects and then create the specific RStudio
projects for the exercises as explained in Exercise 2.

**** OPTIONAL: Leaving humanreadible traces

When inspecting other peoples code it is quite useful to know who
started the project and when. Unfortunately, no one has time to do
this. Luckily RStudio allows you to define automatic headers:

https://www.rdataguy.com/2019/11/lesson-7-creating-rscript-header_11.html

**** OPTIONAL: RStudio search functions

Sometimes it is interesting to copy a specific piece of code from a
different project. However, it can be difficult to know where someone
(including yourself) has saved these lines of code. Note that RStudio
has quite remarkable search/find functions, including
- =Control-Shift-f=
- =Control-.=
- =F2= when cursor is on a function name

See also
https://support.posit.co/hc/en-us/articles/200710523-Navigating-Code-in-the-RStudio-IDE

**** OPTIONAL: Lazy coder

R-syntax is difficult to remember. 
- RStudio has snippets, see =Tools -> Edit Code Snippets=

Whenever you catch yourself looking up the same cryptic code for the
third time it is worth considering a new snippet. For example, here is
a snippet which inserts code to select the first row per person from a
data.table:

#+BEGIN_SRC R  :results output raw  :exports code  :session *R* :cache yes  
snippet first
	${1:name}[${1}[,.I[1],by="pnr"]$V1]
#+END_SRC

Here is a reference:
https://support.posit.co/hc/en-us/articles/204463668-Code-Snippets-in-the-RStudio-IDE

- dput inserts code in R-code syntax, such as names of dataset or levels of a factor:

#+BEGIN_SRC R  :results output raw  :exports code  :session *R* :cache yes  
library(survival)
dput(names(pbc))
dput(unique(pbc$edema))
#+END_SRC  
  
- Publish::lazyFactorCoding

#+BEGIN_SRC R  :results output raw  :exports code  :session *R* :cache yes  
d <- data.table(a=rep(1:3,4),
                b=letters[1:2],
                adate=paste0("15-",8:11,"-2020"),
                bdate=paste0(8:11,"-15","-2020"))
lazyFactorCoding(d)
lazyDateCoding(d,pattern="date")
#+END_SRC  


----------------------------------------------------------------------

** Exercise 2: Targeted projects

*** Download all files from github

**** Via zip file

https://github.com/tagteam/registerTargets/archive/refs/heads/main.zip

Unzip the file in a good neighborhood on your computer. 

**** Using git

If you have the program =git= installed you can clone the github repository:

git clone https://github.com/tagteam/registerTargets/

*** Create RStudio projects

Use the RStudio dialog /New project/ where you choose /Existing Directory/ 
to create projects in the
following three subfolders:

1. =exercises/nuts=
2. =exercises/ami=
3. =exercises/statins=

Notes: The subfolders appear as a result of the previous step
(Download all files from github).  The project name /nuts/ is
obviously is short for /in a nutshell/.

----------------------------------------------------------------------

** Exercise 3: The structure of a minimal targets project

- Switch to the RStudio project /nuts/ (e.g., via recent projects)
- Open the file =_targets.R= (e.g., via "Control-Shift f" eller "Control .") 
- Read the file =_targets.R=
- Open and run the file =run_targets.R=
- Answer the following question:

 /What is the sum of the maximum female age and the maximum male age?/    

----------------------------------------------------------------------

** Exercise 4: Modifying an existing targets project

- switch to RStudio project /ami/
- Open and read the file =_targets.R=
- Open and read the functions that are used in the pipeline.
- Open the file =_run_targets.R= and work out the exercises defined there.









